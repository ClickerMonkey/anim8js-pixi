{"version":3,"sources":["anim8js-pixi.min.js"],"names":["root","factory","define","amd","anim8","module","exports","require","global","this","window","getRGB","color","r","clamp","Math","floor","g","b","$attribute","attr","isString","Attributes","$dynamic","nm","Dynamics","FactoryPixi","priority","attributes","AnimatorPixi","subject","reset","dynamics","FastMap","Animator","Factory","Class","Color","isObject","isArray","$calculator","calculator","defaultValue","padding","sizeScalar","dynamic","alpha","height","pivot","pivotX","pivotY","position","rotation","scale","scaleX","scaleY","width","dimension","x","y","blur","blurX","blurY","radius","step","offset","offsetX","offsetY","angle","blendMode","boundsPadding","fillAlpha","lineColor","lineWidth","tint","gray","invert","a","c","d","tx","ty","noise","size","sepia","anchor","fill","stroke","strokeThickness","wordWrapWidth","dropShadowAngle","PI","dropShadowDistance","dropShadowColor","tilePosition","tileScale","tileScaleOffset","start","end","gradientBlur","format","extend","is","animatorFor","animator","$animator","destroy","attribute","calculatorName","parse","ZERO","dynamicName","name","value","ignoreRelative","cloneDefault","clone","placeAttrimator","attrimator","_placeAttrimator","getAttribute","put","preupdate","now","aa","attrimatorsAdded","length","i","get","setDefault","frame","trigger","apply","updated","_apply","Factories","pixi"],"mappings":"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","file":"anim8js-pixi.min.js","sourcesContent":["/* anim8js-pixi 1.0.0 - anim8 PixiJS (http://www.pixijs.com/) by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define(['anim8'], function(anim8) { // jshint ignore:line\n      return factory(anim8, root);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require('anim8'), global);  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    factory(root.anim8, root);\n  }\n}(this, function(anim8, window)\n{\n\n  var FastMap = anim8.FastMap;\n  var Animator = anim8.Animator;\n  var Factory = anim8.Factory;\n  var Class = anim8.Class;\n  var Color = anim8.Color;\n  var isObject = anim8.isObject;\n  var isArray = anim8.isArray;\n  var isString = anim8.isString;\n\n  var $calculator = anim8.calculator;\n\n  var clamp = anim8.clamp;\n\nfunction getRGB(color)\n{\n  var r = clamp( Math.floor( color.r ), 0, 255 );\n  var g = clamp( Math.floor( color.g ), 0, 255 );\n  var b = clamp( Math.floor( color.b ), 0, 255 );\n\n  return (r << 16) | (g << 8) | b;\n}\n\n\n/**\n * =============================================================================\n * Attributes defined in Pixi.js:\n * =============================================================================\n * AbstractFilter:\n *    padding\n * AsciiFilter:\n *    size\n * DisplayObjectContainer:\n *    alpha, height, pivot(2d), position(2d), rotation, scale(2d), width, x, y\n * BlurFilter:\n *    blur, blurX, blurY\n * Circle:\n *    radius\n * ColorStepFilter:\n *    step\n * DisplacementFilter:\n *    offset(2d)\n * DotScreenFilter:\n *    angle\n * Graphics:\n *    blendMode, boundsPadding, fillAlpha, lineColor(rgba), lineWidth, tint(rgba)\n * GrayFilter:\n *    gray\n * InvertFilter:\n *    invert\n * Matrix:\n *    a, b, c, d, tx, ty\n * NoiseFilter:\n *    noise\n * PixelateFilter:\n *    size\n * SepiaFilter:\n *    sepia\n * SmartBlurFilter:\n *    blur\n * Sprite:\n *    anchor(2d)\n * Text.style:\n *    fill(rgba), stroke, strokeThickness, wordWrapWidth, dropShadowAngle, dropShadowDistance\n * TilingSprite:\n *    tilePosition, tileScale, tileScaleOffset\n * TiltShiftFilter:\n *    end, gradientBlur, start\n */\n\nvar Attributes = {};\n\n// Attributes\nAttributes['default']      = {defaultValue: 0};\nAttributes.padding         = {defaultValue: 0};\nAttributes.sizeScalar      = {defaultValue: 0, dynamic: 'sizeScalar'};\nAttributes.alpha           = {defaultValue: 1};\nAttributes.height          = {defaultValue: 0};\nAttributes.pivot           = {defaultValue: 0, calculator: '2d'};\nAttributes.pivotX          = {defaultValue: 0, dynamic: 'pivotX'};\nAttributes.pivotY          = {defaultValue: 0, dynamic: 'pivotY'};\nAttributes.position        = {defaultValue: 0, calculator: '2d'};\nAttributes.rotation        = {defaultValue: 0};\nAttributes.scale           = {defaultValue: 1, calculator: '2d'};\nAttributes.scaleX          = {defaultValue: 1, dynamic: 'scaleX'};\nAttributes.scaleY          = {defaultValue: 1, dynamic: 'scaleY'};\nAttributes.width           = {defaultValue: 0};\nAttributes.dimension       = {defaultValue: 0, calculator:'2d', dynamic: 'dimension'};\nAttributes.x               = {defaultValue: 0};\nAttributes.y               = {defaultValue: 0};\nAttributes.blur            = {defaultValue: 2};\nAttributes.blurX           = {defaultValue: 2};\nAttributes.blurY           = {defaultValue: 2};\nAttributes.radius          = {defaultValue: 0};\nAttributes.step            = {defaultValue: 0};\nAttributes.offset          = {defaultValue: 0, calculator: '2d'};\nAttributes.offsetX         = {defaultValue: 0, dynamic: 'offsetX'};\nAttributes.offsetY         = {defaultValue: 0, dynamic: 'offsetY'};\nAttributes.angle           = {defaultValue: 0};\nAttributes.blendMode       = {defaultValue: 0};\nAttributes.boundsPadding   = {defaultValue: 0};\nAttributes.fillAlpha       = {defaultValue: 1};\nAttributes.lineColor       = {defaultValue: Color(), calculator: 'rgba', dynamic: 'lineColor'};\nAttributes.lineWidth       = {defaultValue: 0};\nAttributes.tint            = {defaultValue: Color(), calculator: 'rgb', dynamic: 'tint'};\nAttributes.gray            = {defaultValue: 1};\nAttributes.invert          = {defaultValue: 1};\nAttributes.a               = {defaultValue: 1};\nAttributes.b               = {defaultValue: 0};\nAttributes.c               = {defaultValue: 0};\nAttributes.d               = {defaultValue: 1};\nAttributes.tx              = {defaultValue: 0};\nAttributes.ty              = {defaultValue: 0};\nAttributes.noise           = {defaultValue: 0.5};\nAttributes.size            = {defaultValue: 10, calculator: '2d'};\nAttributes.sepia           = {defaultValue: 1};\nAttributes.anchor          = {defaultValue: 0, calculator: '2d'};\nAttributes.fill            = {defaultValue: Color(), calculator: 'rgba', dynamic: 'fill'};\nAttributes.stroke          = {defaultValue: Color(), calculator: 'rgba', dynamic: 'stroke'};\nAttributes.strokeThickness = {defaultValue: 0};\nAttributes.wordWrapWidth   = {defaultValue: 100};\nAttributes.dropShadowAngle = {defaultValue: Math.PI / 4};\nAttributes.dropShadowDistance = {defaultValue: 5};\nAttributes.dropShadowColor = {defaultValue: Color(0,0,0), calculator:'rgba', dynamic: 'dropShadowColor'};\nAttributes.tilePosition    = {defaultValue: 0, calculator: '2d'};\nAttributes.tileScale       = {defaultValue: 1, calculator: '2d'};\nAttributes.tileScaleOffset = {defaultValue: 1, calculator: '2d'};\nAttributes.start           = {defaultValue: 0};\nAttributes.end             = {defaultValue: 0};\nAttributes.gradientBlur    = {defaultValue: 0};\n\n\nfunction $attribute(attr)\n{\n  if ( isString( attr ) && attr in Attributes )\n  {\n    return Attributes[ attr ];\n  }\n\n  return Attributes['default'];\n}\n\n\n/**\n * =============================================================================\n * Dynamic Attributes defined in anim8js\n * =============================================================================\n * number: scaleX, scaleY, pivotX, pivotY, offsetX, offsetY, anchorX, anchorY\n * 2d: dimension\n * rgba:\n */\n\nvar Dynamics = {};\n\nDynamics.scaleX = function(attr, subject)\n{\n  subject.scale.x = attr;\n};\n\nDynamics.scaleY = function(attr, subject)\n{\n  subject.scale.y = attr;\n};\n\nDynamics.pivotX = function(attr, subject)\n{\n  subject.pivot.x = attr;\n};\n\nDynamics.pivotY = function(attr, subject)\n{\n  subject.pivot.y = attr;\n};\n\nDynamics.offsetX = function(attr, subject)\n{\n  subject.offset.x = attr;\n};\n\nDynamics.offsetY = function(attr, subject)\n{\n  subject.offset.y = attr;\n};\n\nDynamics.dimension = function(attr, subject)\n{\n  subject.width = attr.x;\n  subject.height = attr.y;\n};\n\nDynamics.color = function(attr, subject)\n{\n  subject.color = Color.format( attr );\n};\n\nDynamics.lineColor = function(attr, subject)\n{\n  subject.lineColor = getRGB( attr );\n};\n\nDynamics.fill = function(attr, subject)\n{\n  subject.fill = Color.format( attr );\n};\n\nDynamics.stroke = function(attr, subject)\n{\n  subject.stroke = Color.format( attr );\n};\n\nDynamics.dropShadowColor = function(attr, subject)\n{\n  subject.dropShadowColor = Color.format( attr );\n};\n\nDynamics.tint = function(attr, subject)\n{\n  subject.tint = getRGB( attr );\n};\n\nDynamics.sizeScalar = function(attr, subject)\n{\n  subject.size = attr;\n};\n\n\nfunction $dynamic(nm)\n{\n  if ( isString( nm ) && nm in Dynamics )\n  {\n    return Dynamics[ nm ];\n  }\n\n  return false;\n}\n\nfunction FactoryPixi()\n{\n  this.priority = 3;\n  this.attributes = {};\n}\n\nClass.extend( FactoryPixi, Factory,\n{\n\n  is: function(subject)\n  {\n    return isObject( subject ) && !isArray( subject );\n  },\n\n  animatorFor: function(subject)\n  {\n    var animator = subject.$animator;\n\n    if ( !animator )\n    {\n      animator = new AnimatorPixi( subject );\n      animator.factory = this;\n\n      subject.$animator = animator;\n    }\n\n    return animator;\n  },\n\n  destroy: function(animator)\n  {\n    delete animator.subject.$animator;\n  },\n\n  attribute: function(attr)\n  {\n    var attribute = this.attributes[ attr ];\n\n    if ( !attribute )\n    {\n      attribute = this.attributes[ attr ] = $attribute( attr );\n\n      var calculatorName = attribute.calculator;\n      var calculator = $calculator( calculatorName );\n      var defaultValue = calculator.parse( attribute.defaultValue, calculator.ZERO );\n      var dynamicName = attribute.dynamic;\n      var dynamic = $dynamic( dynamicName );\n\n      attribute.calculatorName = calculatorName;\n      attribute.calculator = calculator;\n      attribute.defaultValue = defaultValue;\n      attribute.name = attr;\n      attribute.dynamicName = dynamicName;\n      attribute.dynamic = dynamic;\n      attribute.parse = function(value, ignoreRelative) {\n        return this.calculator.parse( value, this.defaultValue, ignoreRelative );\n      };\n      attribute.cloneDefault = function() {\n        return this.calculator.clone( this.defaultValue );\n      };\n    }\n\n    return attribute;\n  }\n});\n\n\nfunction AnimatorPixi( subject )\n{\n  this.reset( subject );\n  this.dynamics = new FastMap();\n}\n\nClass.extend( AnimatorPixi, Animator,\n{\n\n  placeAttrimator: function( attrimator )\n  {\n    this._placeAttrimator( attrimator );\n\n    // Place any dynamic function on this animator.\n    var attr = attrimator.attribute;\n    var attribute = this.getAttribute( attr );\n    var dynamic = attribute.dynamic;\n\n    if ( dynamic )\n    {\n      this.dynamics.put( attr, dynamic );\n    }\n\n    return this;\n  },\n\n  preupdate: function(now)\n  {\n    // If there are attribute placed on the animator since the last preupdate\n    // that has computed values we need to replace the path on the event with\n    // a copy containing the computed values. This is where current value &\n    // relative values are injected from the animator into the attribute.\n    var aa = this.attrimatorsAdded;\n    if ( aa.length )\n    {\n      for (var i = 0; i < aa.length; i++)\n      {\n        var attrimator = aa[ i ];\n        var attr = attrimator.attribute;\n        var dynamic = this.dynamics.get( attr );\n\n        if ( attr in this.subject )\n        {\n          if ( dynamic )\n          {\n            this.setDefault( attr ); // TODO\n          }\n          else\n          {\n            this.frame[ attr ] = this.subject[ attr ];\n          }\n        }\n        else\n        {\n          this.setDefault( attr );\n        }\n\n        attrimator.start( now, this );\n      }\n\n      aa.length = 0;\n    }\n\n    this.trigger('preupdate');\n\n    return this;\n  },\n\n  apply: function()\n  {\n    // If a dynamic attribute has been updated, call the dynamic function and\n    // mark the attribute as not needing to be updated.\n    for (var attr in this.frame)\n    {\n      var dynamic = this.dynamics.get( attr );\n\n      if ( this.updated[ attr ] && dynamic )\n      {\n        dynamic( this.frame[ attr ], this.subject );\n\n        this.updated[ attr ] = false;\n      }\n    }\n\n    // Call the parent apply\n    this._apply();\n\n    return this;\n  }\n\n});\n\n\n\n  // Register Factory\n  anim8.Factories['pixi'] = new FactoryPixi();\n\n  // Classes\n  anim8.AnimatorPixi = AnimatorPixi;\n  anim8.FactoryPixi = FactoryPixi;\n\n  // Namespace\n  anim8.pixi = {\n    Attributes:           Attributes,\n    attribute:            $attribute,\n    Dynamics:             Dynamics,\n    dynamic:              $dynamic,\n    getRGB:               getRGB\n  };\n\n  return anim8;\n\n}));\n"],"sourceRoot":"/source/"}